<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据挖掘 on 冷眸</title>
    <link>https://blog.pydaxing.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</link>
    <description>Recent content in 数据挖掘 on 冷眸</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Nov 2020 18:12:17 +0000</lastBuildDate><atom:link href="https://blog.pydaxing.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DKT复现详解</title>
      <link>https://blog.pydaxing.com/post/20201124_dkt-pytorch/</link>
      <pubDate>Tue, 24 Nov 2020 18:12:17 +0000</pubDate>
      
      <guid>https://blog.pydaxing.com/post/20201124_dkt-pytorch/</guid>
      <description>知识追踪（Knowledge Tracing）是根据学生过去的答题情况对学生的知识掌握情况进行建模，从而得到学生当前知识状态表示的一种技术。将深度学习的方法引入知识追踪最早出现于发表在NeurIPS 2015上的一篇论文《Deep Knowledge Tracing》，作者来自斯坦福大学。在这篇论文中，作者提出了使用深度知识追踪（Deep Knowledge Tracing, DKT）的概念，利用RNN对学生的学习情况进行建模，之后引出了一系列工作，2019年已经有使用Transformer代替RNN和LSTM并且达到了SOTA的论文。DKT作为知识追踪模型深度化的开山之作，在几乎所有的深度知识追踪模型中都作为baseline，而DKT作者给出的模型实现是基于lua语言的，为了能够让更多的研究人员更方便的使用，这里给出一种python的实现，采用的是pytorch框架。
下载 模型代码已经发布在github上，可点击这里查看和下载具体代码。
或者可以直接通过如下命令直接下载到本地：
git clone https://github.com/pydaxing/DeepKnowledgeTracing-DKT-Pytorch.git
具体运行和使用方法参考GitHub项目上ReadMe。
项目结构-DKT 在DKT文件夹下包括两个文件夹：KTDataset和KnowledgeTracing。
KTDataset文件夹下有6个常用的知识追踪数据集，数据都已经处理成三行格式：
第一行：答题数 第二行：题目编号 第三行：答题结果，0表示错，1表示对
Note：可根据需要，按照数据格式自行添加新的数据集。
模型结构-KnowledgeTracing 模型的整个流程都在KnowledgeTracing目录下，包括模型、参数设置、数据处理、模型训练和评估，分别在四个子目录下：model， Constant，data，evaluation。
参数设置-Constant Constant下主要设置一些参数和超参数，超参数也分为四大块：数据集存储路径、数据集、题目数、模型超参数。
数据集存储路径
Dpath = &amp;#39;../../KTDataset&amp;#39; 数据集：一共包括6个数据集
datasets = { &amp;#39;assist2009&amp;#39; : &amp;#39;assist2009&amp;#39;, &amp;#39;assist2015&amp;#39; : &amp;#39;assist2015&amp;#39;, &amp;#39;assist2017&amp;#39; : &amp;#39;assist2017&amp;#39;, &amp;#39;static2011&amp;#39; : &amp;#39;static2011&amp;#39;, &amp;#39;kddcup2010&amp;#39; : &amp;#39;kddcup2010&amp;#39;, &amp;#39;synthetic&amp;#39; : &amp;#39;synthetic&amp;#39; } 题目数：表示每个数据集里面题目的数量
numbers = { &amp;#39;assist2009&amp;#39; : 124, &amp;#39;assist2015&amp;#39; : 100, &amp;#39;assist2017&amp;#39; : 102, &amp;#39;static2011&amp;#39; : 1224, &amp;#39;kddcup2010&amp;#39; : 661, &amp;#39;synthetic&amp;#39; : 50 } 模型超参数：主要包括所用数据集、输入输出维度、学习率、最大步长、学习周期等。</description>
    </item>
    
  </channel>
</rss>
